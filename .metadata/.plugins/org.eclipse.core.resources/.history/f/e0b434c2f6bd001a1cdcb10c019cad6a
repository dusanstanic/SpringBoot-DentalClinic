package com.example.demo.model;

import java.io.Serializable;
import javax.persistence.*;
import java.sql.Time;
import java.util.Date;
import java.util.List;


/**
 * The persistent class for the appointment_time database table.
 * 
 */
@Entity
@Table(name="appointment_time")
@NamedQuery(name="AppointmentTime.findAll", query="SELECT a FROM AppointmentTime a")
public class AppointmentTime implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private int id;

	@Temporal(TemporalType.DATE)
	private Date date;

	@Column(name="time_from")
	private Time timeFrom;

	@Column(name="time_to")
	private Time timeTo;

	//bi-directional many-to-one association to Appointment
	@ManyToOne
	private Appointment appointment;

	//bi-directional many-to-one association to Fullhour
	@OneToMany(mappedBy="appointmentTime")
	private List<Fullhour> fullhours;

	//bi-directional many-to-one association to Halfhour
	@OneToMany(mappedBy="appointmentTime")
	private List<Halfhour> halfhours;

	public AppointmentTime() {
	}

	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	public Time getTimeFrom() {
		return this.timeFrom;
	}

	public void setTimeFrom(Time timeFrom) {
		this.timeFrom = timeFrom;
	}

	public Time getTimeTo() {
		return this.timeTo;
	}

	public void setTimeTo(Time timeTo) {
		this.timeTo = timeTo;
	}

	public Appointment getAppointment() {
		return this.appointment;
	}

	public void setAppointment(Appointment appointment) {
		this.appointment = appointment;
	}

	public List<Fullhour> getFullhours() {
		return this.fullhours;
	}

	public void setFullhours(List<Fullhour> fullhours) {
		this.fullhours = fullhours;
	}

	public Fullhour addFullhour(Fullhour fullhour) {
		getFullhours().add(fullhour);
		fullhour.setAppointmentTime(this);

		return fullhour;
	}

	public Fullhour removeFullhour(Fullhour fullhour) {
		getFullhours().remove(fullhour);
		fullhour.setAppointmentTime(null);

		return fullhour;
	}

	public List<Halfhour> getHalfhours() {
		return this.halfhours;
	}

	public void setHalfhours(List<Halfhour> halfhours) {
		this.halfhours = halfhours;
	}

	public Halfhour addHalfhour(Halfhour halfhour) {
		getHalfhours().add(halfhour);
		halfhour.setAppointmentTime(this);

		return halfhour;
	}

	public Halfhour removeHalfhour(Halfhour halfhour) {
		getHalfhours().remove(halfhour);
		halfhour.setAppointmentTime(null);

		return halfhour;
	}

}